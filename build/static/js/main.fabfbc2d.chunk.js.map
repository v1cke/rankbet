{"version":3,"sources":["components/DraggableItem.js","components/PlayerTable.js","components/CurrentStandingsTable.js","components/RankingsTable.js","App.js","index.js"],"names":["DraggableItem","_ref","id","index","moveItem","name","className","isDragging","drag","useDrag","type","item","collect","monitor","drop","useDrop","accept","draggedItem","opacity","_jsx","ref","node","style","children","PlayerTable","player","initialTeams","items","setItems","useState","fromIndex","toIndex","updatedItems","movedItem","splice","_jsxs","map","concat","CurrentStandingsTable","standings","club","team","RankingsTable","players","data","setData","useEffect","calculatePoints","sortedData","points","forEach","prediction","actualPosition","findIndex","positionDifference","Math","abs","sort","a","b","App","setStandings","loading","setLoading","selectedPlayer","setSelectedPlayer","async","options","method","url","headers","response","axios","request","error","console","fetchStandings","DndProvider","backend","HTML5Backend","display","justifyContent","padding","flexDirection","alignItems","gap","value","onChange","event","target","fontSize","background","border","borderRadius","cursor","width","filter","ReactDOM","render","React","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fabfbc2d.chunk.js","sourcesContent":["import React from \"react\";\nimport { useDrag, useDrop } from \"react-dnd\";\n\nconst DraggableItem = ({ id, index, moveItem, name, className }) => {\n  const [{ isDragging }, drag] = useDrag({\n    type: \"ITEM\",\n    item: { id, index },\n    collect: (monitor) => ({\n      isDragging: monitor.isDragging(),\n    }),\n  });\n\n  const [, drop] = useDrop({\n    accept: \"ITEM\",\n    drop: (draggedItem) => {\n      if (draggedItem.index !== index) {\n        moveItem(draggedItem.index, index);\n      }\n    },\n  });\n\n  const opacity = isDragging ? 0.5 : 1;\n\n  return (\n    <div\n      ref={(node) => drag(drop(node))}\n      className={className}\n      style={{ opacity }}\n    >\n      {name}\n    </div>\n  );\n};\n\nexport default DraggableItem;\n","import React, { useState } from \"react\";\nimport DraggableItem from \"./DraggableItem\";\n\nconst PlayerTable = ({ player, initialTeams }) => {\n  const [items, setItems] = useState(initialTeams);\n\n  const moveItem = (fromIndex, toIndex) => {\n    const updatedItems = [...items];\n    const [movedItem] = updatedItems.splice(fromIndex, 1);\n    updatedItems.splice(toIndex, 0, movedItem);\n    setItems(updatedItems);\n  };\n\n  return (\n    <div className=\"table\">\n      <h3>{player}</h3>\n      {items.map((item, index) => (\n        <DraggableItem\n          key={item}\n          id={item}\n          index={index}\n          moveItem={moveItem}\n          className=\"draggable-item\"\n          name={`${index + 1}. ${item}`} // Nummerierung der Teams\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default PlayerTable;\n","const CurrentStandingsTable = ({ standings }) => {\n  return (\n    <div className=\"table\">\n      <h3>Aktuelle Tabelle</h3>\n      {standings.map((club, index) => (\n        <div key={index} className=\"table-row\">\n          {index + 1}. {club.team.name}\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default CurrentStandingsTable;\n","import React, { useState, useEffect } from \"react\";\n\nconst RankingsTable = ({ players, standings }) => {\n  const [data, setData] = useState([]);\n\n  useEffect(() => {\n    const calculatePoints = () => {\n      const newData = players.map((player) => {\n        let points = 0;\n        player.initialTeams.forEach((prediction, index) => {\n          const actualPosition = standings.findIndex(\n            (club) => club.team.name === prediction\n          );\n          if (actualPosition !== -1) {\n            const positionDifference = Math.abs(index - actualPosition);\n            points += positionDifference;\n          }\n        });\n        return { ...player, points };\n      });\n\n      const sortedData = newData.sort((a, b) => a.points - b.points);\n      setData(sortedData);\n    };\n\n    calculatePoints();\n  }, [players, standings]);\n\n  return (\n    <div className=\"table\">\n      <h3>Aktueller Stand</h3>\n      {data.map((player, index) => (\n        <div key={player.name} className=\"table-row\">\n          {index + 1}. {player.name}: {player.points} points\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default RankingsTable;\n","import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { HTML5Backend } from \"react-dnd-html5-backend\";\nimport { DndProvider } from \"react-dnd\";\nimport PlayerTable from \"./components/PlayerTable\";\nimport CurrentStandingsTable from \"./components/CurrentStandingsTable\";\nimport RankingsTable from \"./components/RankingsTable\";\n\nconst App = () => {\n  const [standings, setStandings] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [selectedPlayer, setSelectedPlayer] = useState(\"\"); // State für den ausgewählten Spieler\n\n  useEffect(() => {\n    const fetchStandings = async () => {\n      const options = {\n        method: \"GET\",\n        url: \"https://bundesliga-standings.p.rapidapi.com/\",\n        headers: {\n          \"x-rapidapi-key\":\n            \"576b8619ccmsh8194636abb97867p1cd04ejsn76b6371afe4e\",\n          \"x-rapidapi-host\": \"bundesliga-standings.p.rapidapi.com\",\n        },\n      };\n\n      try {\n        const response = await axios.request(options);\n        setStandings(response.data);\n        setLoading(false);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n\n    fetchStandings();\n  }, []);\n\n  if (loading) {\n    return <div>Loading...</div>;\n  }\n\n  const ladderPlayer1 = [\n    \"Borussia Dortmund\",\n    \"RB Leipzig\",\n    \"Bayer Leverkusen\",\n    \"Bayern Munich\",\n    \"Eintracht Frankfurt\",\n    \"VfB Stuttgart\",\n    \"VfL Wolfsburg\",\n    \"1. FC Union Berlin\",\n    \"SC Freiburg\",\n    \"Borussia Monchengladbach\",\n    \"TSG Hoffenheim\",\n    \"Werder Bremen\",\n    \"FC Augsburg\",\n    \"Mainz\",\n    \"VfL Bochum\",\n    \"1. FC Heidenheim 1846\",\n    \"Holstein Kiel\",\n    \"St. Pauli\",\n  ];\n  const ladderPlayer2 = [\n    \"Bayern Munich\",\n    \"Bayer Leverkusen\",\n    \"Borussia Dortmund\",\n    \"RB Leipzig\",\n    \"Eintracht Frankfurt\",\n    \"VfB Stuttgart\",\n    \"TSG Hoffenheim\",\n    \"VfL Wolfsburg\",\n    \"Werder Bremen\",\n    \"SC Freiburg\",\n    \"Mainz\",\n    \"Borussia Monchengladbach\",\n    \"1. FC Union Berlin\",\n    \"VfL Bochum\",\n    \"FC Augsburg\",\n    \"1. FC Heidenheim 1846\",\n    \"St. Pauli\",\n    \"Holstein Kiel\",\n  ];\n  const ladderPlayer3 = [\n    \"Bayern Munich\",\n    \"Bayer Leverkusen\",\n    \"Borussia Dortmund\",\n    \"RB Leipzig\",\n    \"Eintracht Frankfurt\",\n    \"VfL Wolfsburg\",\n    \"TSG Hoffenheim\",\n    \"VfB Stuttgart\",\n    \"SC Freiburg\",\n    \"Mainz\",\n    \"Werder Bremen\",\n    \"Borussia Monchengladbach\",\n    \"FC Augsburg\",\n    \"1. FC Union Berlin\",\n    \"1. FC Heidenheim 1846\",\n    \"St. Pauli\",\n    \"VfL Bochum\",\n    \"Holstein Kiel\",\n  ];\n\n  const players = [\n    { name: \"Happy\", initialTeams: ladderPlayer1 },\n    { name: \"Peter\", initialTeams: ladderPlayer2 },\n    { name: \"Vicke\", initialTeams: ladderPlayer3 },\n  ];\n\n  const handlePlayerChange = (event) => {\n    setSelectedPlayer(event.target.value); // Ausgewählten Spieler setzen\n  };\n\n  return (\n    <DndProvider backend={HTML5Backend}>\n      <div style={{ display: \"flex\", justifyContent: \"center\", padding: 20 }}>\n        <div\n          style={{\n            display: \"flex\",\n            flexDirection: \"row\",\n            alignItems: \"center\",\n            gap: \"20px\",\n          }}\n        >\n          <select\n            value={selectedPlayer}\n            onChange={handlePlayerChange}\n            style={{\n              padding: \"10px\",\n              fontSize: \"16px\",\n              background: \"white\",\n              border: \"1px solid #ccc\",\n              borderRadius: \"4px\",\n              cursor: \"pointer\",\n            }}\n          >\n            <option value=\"\">Spielertipps wählen</option>\n            {players.map((player) => (\n              <option key={player.name} value={player.name}>\n                {player.name}\n              </option>\n            ))}\n          </select>\n\n          {selectedPlayer && (\n            <div style={{ width: \"250px\" }}>\n              {players\n                .filter((player) => player.name === selectedPlayer)\n                .map((player) => (\n                  <PlayerTable\n                    key={player.name}\n                    player={player.name}\n                    initialTeams={player.initialTeams}\n                  />\n                ))}\n            </div>\n          )}\n\n          {/* Aktuelle Tabelle und Rangliste */}\n          <div style={{ display: \"flex\", flexDirection: \"row\", gap: \"80px\" }}>\n            <div style={{ width: \"250px\" }}>\n              {standings && <CurrentStandingsTable standings={standings} />}\n            </div>\n            <div style={{ width: \"200px\" }}>\n              {standings && (\n                <RankingsTable players={players} standings={standings} />\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n    </DndProvider>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}