{"version":3,"sources":["components/DraggableItem.js","components/PlayerTable.js","components/CurrentStandingsTable.js","components/RankingsTable.js","App.js","index.js"],"names":["DraggableItem","_ref","id","index","moveItem","name","className","isDragging","drag","useDrag","type","item","collect","monitor","drop","useDrop","accept","draggedItem","opacity","_jsx","ref","node","style","children","PlayerTable","player","initialTeams","items","setItems","useState","fromIndex","toIndex","updatedItems","movedItem","splice","_jsxs","flexDirection","map","concat","CurrentStandingsTable","standings","club","teamName","RankingsTable","players","data","setData","useEffect","calculatePoints","sortedData","points","forEach","prediction","actualPosition","findIndex","positionDifference","Math","abs","sort","a","b","App","setStandings","console","log","loading","setLoading","selectedPlayer","setSelectedPlayer","async","options","method","url","response","axios","request","error","fetchStandings","DndProvider","backend","HTML5Backend","justifyContent","padding","alignItems","position","gap","value","onChange","event","target","fontSize","background","border","borderRadius","zIndex","cursor","width","filter","ReactDOM","render","React","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.62fa1e35.chunk.js","sourcesContent":["import React from \"react\";\nimport { useDrag, useDrop } from \"react-dnd\";\n\nconst DraggableItem = ({ id, index, moveItem, name, className }) => {\n  const [{ isDragging }, drag] = useDrag({\n    type: \"ITEM\",\n    item: { id, index },\n    collect: (monitor) => ({\n      isDragging: monitor.isDragging(),\n    }),\n  });\n\n  const [, drop] = useDrop({\n    accept: \"ITEM\",\n    drop: (draggedItem) => {\n      if (draggedItem.index !== index) {\n        moveItem(draggedItem.index, index);\n      }\n    },\n  });\n\n  const opacity = isDragging ? 0.5 : 1;\n\n  return (\n    <div\n      ref={(node) => drag(drop(node))}\n      className={className}\n      style={{ opacity }}\n    >\n      {name}\n    </div>\n  );\n};\n\nexport default DraggableItem;\n","import React, { useState } from \"react\";\nimport DraggableItem from \"./DraggableItem\";\n\nconst PlayerTable = ({ player, initialTeams }) => {\n  const [items, setItems] = useState(initialTeams);\n\n  const moveItem = (fromIndex, toIndex) => {\n    const updatedItems = [...items];\n    const [movedItem] = updatedItems.splice(fromIndex, 1);\n    updatedItems.splice(toIndex, 0, movedItem);\n    setItems(updatedItems);\n  };\n\n  return (\n    <div className=\"table\" style={{ flexDirection: \"column\" }}>\n      <h3>{player}</h3>\n      {items.map((item, index) => (\n        <DraggableItem\n          key={item}\n          className=\"table-row\"\n          id={item}\n          index={index}\n          moveItem={moveItem}\n          name={`${index + 1}. ${item}`} // Nummerierung der Teams\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default PlayerTable;\n","const CurrentStandingsTable = ({ standings }) => {\n  return (\n    <div className=\"table\" style={{ flexDirection: \"column\" }}>\n      <h3>Aktuelle Tabelle</h3>\n      {standings.map((club, index) => (\n        <div key={index} className=\"table-row\">\n          {index + 1}. {club.teamName}\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default CurrentStandingsTable;\n","import React, { useState, useEffect } from \"react\";\n\nconst RankingsTable = ({ players, standings }) => {\n  const [data, setData] = useState([]);\n\n  useEffect(() => {\n    const calculatePoints = () => {\n      const newData = players.map((player) => {\n        let points = 0;\n        player.initialTeams.forEach((prediction, index) => {\n          const actualPosition = standings.findIndex(\n            (club) => club.teamName === prediction\n          );\n          if (actualPosition !== -1) {\n            const positionDifference = Math.abs(index - actualPosition);\n            points += positionDifference;\n          }\n        });\n        return { ...player, points };\n      });\n\n      // Sortiere die Daten nach Punkten (aufsteigend)\n      const sortedData = newData.sort((a, b) => a.points - b.points);\n      setData(sortedData);\n    };\n\n    calculatePoints();\n  }, [players, standings]);\n\n  return (\n    <div className=\"table\" style={{ flexDirection: \"column\" }}>\n      <h3>Aktueller Stand</h3>\n      {data.map((player, index) => (\n        <div key={player.name} className=\"table-row\">\n          {index + 1}. {player.name}: {player.points} points\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default RankingsTable;\n","import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { HTML5Backend } from \"react-dnd-html5-backend\";\nimport { DndProvider } from \"react-dnd\";\nimport PlayerTable from \"./components/PlayerTable\";\nimport CurrentStandingsTable from \"./components/CurrentStandingsTable\";\nimport RankingsTable from \"./components/RankingsTable\";\n\nconst App = () => {\n  const [standings, setStandings] = useState([]);\n  console.log(\"App  standings\", standings);\n  const [loading, setLoading] = useState(true);\n  const [selectedPlayer, setSelectedPlayer] = useState(\"\"); // State für den ausgewählten Spieler\n\n  useEffect(() => {\n    const fetchStandings = async () => {\n      const options = {\n        method: \"GET\",\n        url: \"https://api.openligadb.de/getbltable/bl1/2024\",\n        // url: \"https://bundesliga-standings.p.rapidapi.com/\",\n        // headers: {\n        //   \"x-rapidapi-key\":\n        //     \"576b8619ccmsh8194636abb97867p1cd04ejsn76b6371afe4e\",\n        //   \"x-rapidapi-host\": \"bundesliga-standings.p.rapidapi.com\",\n        // },\n      };\n\n      try {\n        const response = await axios.request(options);\n        setStandings(response.data);\n        setLoading(false);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n\n    fetchStandings();\n  }, []);\n\n  if (loading) {\n    return <div>Loading...</div>;\n  }\n\n  const ladderPlayer1 = [\n    \"Borussia Dortmund\",\n    \"RB Leipzig\",\n    \"Bayer Leverkusen\",\n    \"FC Bayern München\",\n    \"Eintracht Frankfurt\",\n    \"VfB Stuttgart\",\n    \"VfL Wolfsburg\",\n    \"1. FC Union Berlin\",\n    \"SC Freiburg\",\n    \"Borussia Mönchengladbach\",\n    \"TSG 1899 Hoffenheim\",\n    \"Werder Bremen\",\n    \"FC Augsburg\",\n    \"Mainz\",\n    \"VfL Bochum\",\n    \"1. FC Heidenheim 1846\",\n    \"Holstein Kiel\",\n    \"FC St. Pauli\",\n  ];\n  const ladderPlayer2 = [\n    \"FC Bayern München\",\n    \"Bayer Leverkusen\",\n    \"Borussia Dortmund\",\n    \"RB Leipzig\",\n    \"Eintracht Frankfurt\",\n    \"VfB Stuttgart\",\n    \"TSG 1899 Hoffenheim\",\n    \"VfL Wolfsburg\",\n    \"Werder Bremen\",\n    \"SC Freiburg\",\n    \"Mainz\",\n    \"Borussia Mönchengladbach\",\n    \"1. FC Union Berlin\",\n    \"VfL Bochum\",\n    \"FC Augsburg\",\n    \"1. FC Heidenheim 1846\",\n    \"FC St. Pauli\",\n    \"Holstein Kiel\",\n  ];\n  const ladderPlayer3 = [\n    \"FC Bayern München\",\n    \"Bayer Leverkusen\",\n    \"Borussia Dortmund\",\n    \"RB Leipzig\",\n    \"Eintracht Frankfurt\",\n    \"VfL Wolfsburg\",\n    \"TSG 1899 Hoffenheim\",\n    \"VfB Stuttgart\",\n    \"SC Freiburg\",\n    \"Mainz\",\n    \"Werder Bremen\",\n    \"Borussia Mönchengladbach\",\n    \"FC Augsburg\",\n    \"1. FC Union Berlin\",\n    \"1. FC Heidenheim 1846\",\n    \"FC St. Pauli\",\n    \"VfL Bochum\",\n    \"Holstein Kiel\",\n  ];\n\n  const players = [\n    { name: \"Happy\", initialTeams: ladderPlayer1 },\n    { name: \"Peter\", initialTeams: ladderPlayer2 },\n    { name: \"Vicke\", initialTeams: ladderPlayer3 },\n  ];\n\n  const handlePlayerChange = (event) => {\n    setSelectedPlayer(event.target.value); // Ausgewählten Spieler setzen\n  };\n\n  return (\n    <DndProvider backend={HTML5Backend}>\n      <div style={{ justifyContent: \"center\", padding: 20 }}>\n        <div\n          style={{\n            alignItems: \"center\",\n            position: \"relative\",\n            gap: \"20px\", // Abstand zwischen Dropdown und Tabelle\n          }}\n        >\n          {/* Dropdown-Auswahlfeld */}\n          <select\n            value={selectedPlayer}\n            onChange={handlePlayerChange}\n            style={{\n              padding: \"10px\",\n              fontSize: \"16px\",\n              background: \"white\", // Hintergrundfarbe\n              border: \"1px solid #ccc\",\n              borderRadius: \"4px\",\n              zIndex: 10,\n              cursor: \"pointer\", // Stil für bessere UX\n            }}\n          >\n            <option value=\"\">Spielertipps wählen</option>\n            {players.map((player) => (\n              <option key={player.name} value={player.name}>\n                {player.name}\n              </option>\n            ))}\n          </select>\n\n          {/* Zeige die Tabelle nur an, wenn ein Spieler ausgewählt ist */}\n          {selectedPlayer && (\n            <div style={{ width: \"300px\" }}>\n              {players\n                .filter((player) => player.name === selectedPlayer)\n                .map((player) => (\n                  <PlayerTable\n                    key={player.name}\n                    player={player.name}\n                    initialTeams={player.initialTeams}\n                  />\n                ))}\n            </div>\n          )}\n\n          {/* Aktuelle Tabelle und Rangliste */}\n          <div style={{ gap: \"20px\" }}>\n            <div style={{ width: \"300px\" }}>\n              {standings && <CurrentStandingsTable standings={standings} />}\n            </div>\n            <div style={{ width: \"300px\" }}>\n              {standings && (\n                <RankingsTable players={players} standings={standings} />\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n    </DndProvider>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}